{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/Udemy-React-Complete-Guide/axios-practice/axios-practice/src/containers/Blog/FullPost/FullPost.js\";\nimport React, { Component } from 'react';\nimport axios from '../../../axios';\nimport './FullPost.css';\n\nclass FullPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadedPost: null\n    };\n\n    this.deletePostHandler = () => {\n      axios.delete('/posts/' + this.props.match.params.id).then(response => {\n        console.log(response);\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    this.loadData();\n  } // currently if we click on a post to get to '/posts/:id' and then click on another posts to reach the fullpost components\n  // its not getting rerendered onto the page. We need to add a new method to handle this. ComponenetDidMount isnt getting executed again\n\n\n  componentDidUpdate() {\n    this.loadData();\n  }\n\n  loadData() {\n    if (this.props.match.params.id) {\n      if (!this.state.loadedPost || this.state.loadedPost && this.state.loadedPost.id !== +this.props.match.params.id) {\n        axios.get('/posts/' + this.props.match.params.id).then(response => {\n          this.setState({\n            loadedPost: response.data\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    let post = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }\n    }, \"Please select a Post!\");\n\n    if (this.props.match.params.id) {\n      post = /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 18\n        }\n      }, \"Loading...!\");\n    }\n\n    if (this.state.loadedPost) {\n      post = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"FullPost\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }\n      }, this.state.loadedPost.title), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 19\n        }\n      }, this.state.loadedPost.body), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.deletePostHandler,\n        className: \"Delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }\n      }, \"Delete\")));\n    }\n\n    return post;\n  }\n\n}\n\nexport default FullPost;","map":{"version":3,"sources":["/Users/student/Desktop/Udemy-React-Complete-Guide/axios-practice/axios-practice/src/containers/Blog/FullPost/FullPost.js"],"names":["React","Component","axios","FullPost","state","loadedPost","deletePostHandler","delete","props","match","params","id","then","response","console","log","componentDidMount","loadData","componentDidUpdate","get","setState","data","render","post","textAlign","title","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,UAAU,EAAE;AADN,KADuB;;AAAA,SA4B/BC,iBA5B+B,GA4BX,MAAM;AACxBJ,MAAAA,KAAK,CAACK,MAAN,CAAa,YAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAjD,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,OAHH;AAID,KAjC8B;AAAA;;AAK/BG,EAAAA,iBAAiB,GAAG;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACA,SAAKM,QAAL;AACD,GAR8B,CAU/B;AACA;;;AAEAC,EAAAA,kBAAkB,GAAG;AACnB,SAAKD,QAAL;AACD;;AAEDA,EAAAA,QAAQ,GAAG;AACT,QAAK,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7B,EAAkC;AAChC,UAAG,CAAC,KAAKP,KAAL,CAAWC,UAAZ,IAA2B,KAAKD,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBM,EAAtB,KAA6B,CAAC,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA7G,EAAiH;AAC/GT,QAAAA,KAAK,CAACiB,GAAN,CAAU,YAAY,KAAKX,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,eAAKO,QAAL,CAAc;AAACf,YAAAA,UAAU,EAAEQ,QAAQ,CAACQ;AAAtB,WAAd;AACH,SAHD;AAID;AACF;AACF;;AAQCC,EAAAA,MAAM,GAAI;AACN,QAAIC,IAAI,gBAAG;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAX;;AACA,QAAI,KAAKhB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5B,EAA+B;AAC7BY,MAAAA,IAAI,gBAAG;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AACD,QAAI,KAAKpB,KAAL,CAAWC,UAAf,EAA0B;AACxBkB,MAAAA,IAAI,gBACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKnB,KAAL,CAAWC,UAAX,CAAsBoB,KAA3B,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKrB,KAAL,CAAWC,UAAX,CAAsBqB,IAA1B,CAFJ,eAGI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,OAAO,EAAE,KAAKpB,iBAAtB;AAAyC,QAAA,SAAS,EAAC,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAHJ,CADJ;AASD;;AACD,WAAOiB,IAAP;AACH;;AAnD4B;;AAsDjC,eAAepB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../../axios';\nimport './FullPost.css';\n\nclass FullPost extends Component {\n  state = {\n    loadedPost: null\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    this.loadData();\n  }\n\n  // currently if we click on a post to get to '/posts/:id' and then click on another posts to reach the fullpost components\n  // its not getting rerendered onto the page. We need to add a new method to handle this. ComponenetDidMount isnt getting executed again\n\n  componentDidUpdate() {\n    this.loadData();\n  }\n\n  loadData() {\n    if ( this.props.match.params.id ) {\n      if(!this.state.loadedPost || (this.state.loadedPost && this.state.loadedPost.id !== +this.props.match.params.id)){\n        axios.get('/posts/' + this.props.match.params.id)\n          .then(response => {\n            this.setState({loadedPost: response.data});\n        })\n      }\n    }\n  }\n\n  deletePostHandler = () => {\n    axios.delete('/posts/' + this.props.match.params.id)\n      .then(response => {\n        console.log(response)\n      })\n  }\n    render () {\n        let post = <p style={{textAlign: 'center'}}>Please select a Post!</p>;\n        if (this.props.match.params.id){\n          post = <p style={{textAlign: 'center'}}>Loading...!</p>;\n        }\n        if (this.state.loadedPost){\n          post = (\n              <div className=\"FullPost\">\n                  <h1>{this.state.loadedPost.title}</h1>\n                  <p>{this.state.loadedPost.body}</p>\n                  <div className=\"Edit\">\n                      <button onClick={this.deletePostHandler} className=\"Delete\">Delete</button>\n                  </div>\n              </div>\n          );\n        }\n        return post;\n    }\n}\n\nexport default FullPost;\n"]},"metadata":{},"sourceType":"module"}