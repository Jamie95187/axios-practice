{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/Udemy-React-Complete-Guide/axios-practice/axios-practice/src/containers/Blog/Posts/Posts.js\";\nimport React, { Component } from 'react';\nimport axios from '../../../axios';\nimport Post from '../../../components/Post/Post';\nimport { Route } from 'react-router-dom';\nimport FullPost from '../FullPost/FullPost';\nimport './Posts.css'; // Navigate programmatically by using the push method to push to the history stack\n// of the props from posts (inside postSelectedHandler)\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.postSelectedHandler = id => {\n      this.props.history.push({\n        pathname: '/' + id\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props); // Happens asynchronously\n    // const post = axios.get('https://jsonplaceholder.typicode.com/posts') wont work\n\n    axios.get('/posts').then(response => {\n      const posts = response.data.slice(0, 4);\n      const updatedPosts = posts.map(post => {\n        return { ...post,\n          author: 'Jamie'\n        };\n      });\n      this.setState({\n        posts: updatedPosts\n      }); //console.log(response);\n    }).catch(error => {\n      console.log(error); // this.setState({error: true})\n    });\n  }\n\n  render() {\n    let posts = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }, \"Something went wrong!\");\n\n    if (!this.state.error) {\n      posts = this.state.posts.map(post => {\n        return (\n          /*#__PURE__*/\n          // <Link to={'/' + post.id} >\n          React.createElement(Post, {\n            key: post.id,\n            title: post.title,\n            author: post.author,\n            clicked: () => this.postSelectedHandler(post.id),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }\n          }) // </Link>\n\n        );\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"section\", {\n        className: \"Posts\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, posts), /*#__PURE__*/React.createElement(Route, {\n        path: this.props.match.url + '/:id',\n        exact: true,\n        component: FullPost,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }));\n    }\n  }\n\n}\n\n;\nexport default Posts;","map":{"version":3,"sources":["/Users/student/Desktop/Udemy-React-Complete-Guide/axios-practice/axios-practice/src/containers/Blog/Posts/Posts.js"],"names":["React","Component","axios","Post","Route","FullPost","Posts","state","posts","postSelectedHandler","id","props","history","push","pathname","componentDidMount","console","log","get","then","response","data","slice","updatedPosts","map","post","author","setState","catch","error","render","textAlign","title","match","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,aAAP,C,CAEA;AACA;;AAEA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE;AADD,KADoB;;AAAA,SAK5BC,mBAL4B,GAKLC,EAAD,IAAQ;AAC5B,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB;AAACC,QAAAA,QAAQ,EAAE,MAAMJ;AAAjB,OAAxB;AACD,KAP2B;AAAA;;AAS5BK,EAAAA,iBAAiB,GAAI;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB,EADmB,CAEnB;AACA;;AACAT,IAAAA,KAAK,CAACgB,GAAN,CAAU,QAAV,EACGC,IADH,CACQC,QAAQ,IAAI;AAChB,YAAMZ,KAAK,GAAGY,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAd;AACA,YAAMC,YAAY,GAAGf,KAAK,CAACgB,GAAN,CAAUC,IAAI,IAAI;AACrC,eAAM,EACJ,GAAGA,IADC;AAEJC,UAAAA,MAAM,EAAE;AAFJ,SAAN;AAID,OALoB,CAArB;AAMA,WAAKC,QAAL,CAAc;AAACnB,QAAAA,KAAK,EAAEe;AAAR,OAAd,EARgB,CAShB;AACD,KAXH,EAYGK,KAZH,CAYSC,KAAK,IAAI;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ,EADc,CAEd;AACD,KAfH;AAgBD;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAItB,KAAK,gBAAG;AAAG,MAAA,KAAK,EAAE;AAACuB,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;;AACA,QAAG,CAAC,KAAKxB,KAAL,CAAWsB,KAAf,EAAqB;AACnBrB,MAAAA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAqBC,IAAI,IAAI;AACjC;AAAA;AACA;AACA,8BAAC,IAAD;AACE,YAAA,GAAG,EAAEA,IAAI,CAACf,EADZ;AAEE,YAAA,KAAK,EAAEe,IAAI,CAACO,KAFd;AAGE,YAAA,MAAM,EAAEP,IAAI,CAACC,MAHf;AAIE,YAAA,OAAO,EAAE,MAAM,KAAKjB,mBAAL,CAAyBgB,IAAI,CAACf,EAA9B,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,CAOA;;AAPA;AASH,OAVO,CAAR;AAWF,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAS,QAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,KADH,CADF,eAII,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKG,KAAL,CAAWsB,KAAX,CAAiBC,GAAjB,GAAuB,MAApC;AAA4C,QAAA,KAAK,MAAjD;AAAkD,QAAA,SAAS,EAAE7B,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADF;AAQD;AACF;;AAtD2B;;AAwD7B;AAED,eAAeC,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../../axios';\nimport Post from '../../../components/Post/Post';\nimport { Route } from 'react-router-dom';\nimport FullPost from '../FullPost/FullPost';\nimport './Posts.css';\n\n// Navigate programmatically by using the push method to push to the history stack\n// of the props from posts (inside postSelectedHandler)\n\nclass Posts extends Component {\n  state = {\n    posts: []\n  }\n\n  postSelectedHandler = (id) => {\n    this.props.history.push({pathname: '/' + id})\n  }\n\n  componentDidMount () {\n    console.log(this.props)\n    // Happens asynchronously\n    // const post = axios.get('https://jsonplaceholder.typicode.com/posts') wont work\n    axios.get('/posts')\n      .then(response => {\n        const posts = response.data.slice(0, 4);\n        const updatedPosts = posts.map(post => {\n          return{\n            ...post,\n            author: 'Jamie'\n          }\n        })\n        this.setState({posts: updatedPosts})\n        //console.log(response);\n      })\n      .catch(error => {\n        console.log(error);\n        // this.setState({error: true})\n      })\n  }\n\n  render(){\n      let posts = <p style={{textAlign: 'center'}}>Something went wrong!</p>\n      if(!this.state.error){\n        posts = this.state.posts.map(post => {\n            return(\n            // <Link to={'/' + post.id} >\n            <Post\n              key={post.id}\n              title={post.title}\n              author={post.author}\n              clicked={() => this.postSelectedHandler(post.id)}/>\n            // </Link>\n          );\n        });\n      return(\n        <div>\n          <section className=\"Posts\">\n            {posts}\n          </section>\n            <Route path={this.props.match.url + '/:id'} exact component={FullPost} />\n        </div>\n      );\n    }\n  };\n\n};\n\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}